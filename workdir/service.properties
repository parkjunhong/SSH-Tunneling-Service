#####################################
##### System Information
#####################################
# Property: system.sudo
# sudo 권한 필요.
# since: 2019-12-05
system.sudo=false

#####################################
##### static information
#####################################
# Property: install.module.directory
install.module.directory=install

# Property: install.module.script
# deprecated: 22020-02-24
install.module.script=run-install.sh

# Property: inst_service_sh
service.registration.script=install-as-a-service.sh

## Comment
# Property: service.title
# 서비스 설명
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.title=SSH Tunneling Server

# Property: service_properteis
# 서비스 설정 파일
# since: 2019-11-04
service.properties=${install.dir}/service.properties

#####################################
##### deploy module
##### (deploy.sh)
#####################################

# Property: root.dir
# 설치 최상위 디렉토리
# since: 2019-11-07
# !!! 프로그램에 따라 수정할 것. !!!
root.dir=${sys:user.home}

# Property: group
# 수행프로젝트.
# 이 정보를 기준으로 개발프로젝트 결과물이 동일한 경로에 배포된다. 
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
group=open-commons

# Property: group
# 수행프로젝트.
# 개발프로젝트 결과물이 저장되는 경로 
# since: 2019-11-06
group.root.dir=${root.dir}/${group}

# Property: group.bin.dir
# 수행프로젝트 설치 디렉토리
# since: 2019-11-06
group.bin.dir=${group.root.dir}/bin

# Property: group.log.dir
# 수행프로젝트 로그 디렉토리
# since: 2019-11-06
group.log.dir=${group.root.dir}/logs

# Property: build.name
# maven 프로젝트의 POM.xml 에서 build.finalName 의 값과 일치해야 함. 
# ...
# <build>
# 	<finalName>${build.name}</finalName>
# ...
# </build>
# !!! 프로그램에 따라 수정할 것. !!!
build.name=strm

# Property: build.file
# 프로젝트 POM.xml 에서 build.finalName 의 값 
# ...
# <build>
# 	<finalName>${build.name}</finalName>
# ...
# </build>
# 프로젝트 /assembly/assembly-package-all.xml 에서 format 정보
# ...
# <formats>
# 	<format>tar.gz</format>
# </formats>
# 파일 확장자는 반드시 tar.gz
build.file=${build.name}.tar.gz

# Property: work_tmp_dir
# 임시 설치용 디렉토리
# deprecated: 2020-02-24
work_tmp_dir=./tmp

#####################################
##### install module
##### (run-install.sh)
#####################################
# Property: install.module.script.desc
install.module.script.desc=### THIS IS A SCRIPT FOR INSTALL A THIS SERVICE ' ###

# Property: install.dir
# 절대경로로 설정할 것.
# !!! 프로그램에 따라 수정할 것. !!!
install.dir=${group.bin.dir}/${build.name}

# Property: log.dir
# 절대경로로 설정할 것.
# since 2019-11-05
log.dir=${group.log.dir}/${build.name}

# Property: files.configuration.filenames
# 내용을 변경할 파일 목록
# since: 2020-02-24 
files.configuration.filenames=start.sh stop.sh status.sh ssh-cmd.sh
# Property: <filename>.configuration.properties
# 파일별 변경할 속성명
# since: 2020-02-24
start.sh.configuration.properties=install.dir application.name execution.filename
stop.sh.configuration.properties=application.name
status.sh.configuration.properties=install.dir service.name application.name
# SSH Tunneling Request & Manage bash script file.
ssh-cmd.sh.configuration.properties=server.servlet.contextpath server.port

# Property: resources.directories
# 복사할 디렉토리명(빈칸으로 구분)
# ./assemble/assembly-package-all.xml 에 정의된 내용을 참고.
# !!! 프로그램에 따라 수정할 것. !!!
resources.directories=config crontab lib

# Property: ${directory}.configuration.file
# 디렉토리에 있는 파일 내용을 변경.
# 예) \*: 모든 파일
#    다중 파일:  빈칸으로 구분하며, 파일명에 빈칸은 올 수 없다.    
# since 2020-02-17
# !!! 프로그램에 따라 수정할 것. !!!
# 파일위치: ./config
config.configuration.filenames=log4j2.yml application.yml
log4j2.yml.configuration.properties=log.dir build.name
application.yml.configuration.properties=server.servlet.contextpath server.port

# cron 설정파일에 사용되는 프로퍼티.
# 파일위치: ./shell/cron
# since 2019-11-11
# !!! 프로그램에 따라 수정할 것. !!!
crontab.configuration.filenames=crontab.cron
crontab.cron.configuration.properties=log.dir ervice.title

# Property: service.registration
# 서비스로 등록할 지 여부. (N: No, Y: Yes, CASE_SENSITIVE)
# !!! 프로그램에 따라 수정할 것. !!!
service.registration=Y

# Property: service.autostart
# 서비스인 경우 자동 시작할지 여부. (N: No, Y: Yes, CASE_SENSITIVE)
# !!! 프로그램에 따라 수정할 것. !!!
service.autostart=Y

# Property: service.registration.message 
# 서비스 등록용 메시지
service.registration.message=Start to install '${service.title}'

#####################################
##### install as a service module
##### ENABLE IF $service.registration=Y 
#####################################
# Property: service.name
# CentOS7 등록될 서비스명
service.name=${build.name}

# Property: service.dir.<os>.<version>
# 서비스 파일 설치 디렉토리.
# CentOS 6 : /etc/init.d
# CentOS 7 : /usr/lib/systemd/system
# Red Hot 6: /etc/init.d
# Ubuntu 16: /usr/lib/systemd/system
# Ubuntu 18: /lib/systemd/system
# since: 2020-02-24
service.dir.centos.6=/etc/init.d
service.dir.centos.7=/usr/lib/systemd/system
service.dir.red.6=/etc/init.d
service.dir.ubuntu.16=/usr/lib/systemd/system
service.dir.ubuntu.18=/lib/systemd/system


# Property: service.file.description
# ...
# [Unit]
# Description: ${service.file.description}
# ...
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.description=${service.title}

# Property: service.file.exec_start
# [Service]
# ExecStart: ${service.file.exec_start}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.exec_start=${install.dir}/start.sh

# Property: service.file.exec_stop
# [Service]
# ExecStop: ${service.file.exec_stop}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.exec_stop=${install.dir}/stop.sh

# Property: service.file.exec_status
# [Service]
# ExecStop: ${service.file.exec_status}
# since: 2019-11-11
# !!! 프로그램에 따라 수정할 것. !!!
service.file.exec_status=${install.dir}/status.sh

### begin: for CentOS7 / Ubuntu 16 or higher
## Unit
# Property: service.file.after
# for CentOS7 / Ubuntu 16 or higher
# ...
# [Unit]
# After: ${service.file.after}
# ...
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.after=networ.target

## Service
# Property: service.file.type

# [Service]
# Type: ${service.file.type}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.type=forking

# Property: service.file.user
# [Service]
# User: ${service.file.user}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.user=${sys:username}

# Property: service.file.group
# [Service]
# Group: ${service.file.group}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.group=${sys:username}

## Install
# Property: service.file.wantedby
# for CentOS7 / Ubuntu 16 or higher
# [Install]
# WantedBy: ${service.file.wantedby}
# since: 2019-11-04
# !!! 프로그램에 따라 수정할 것. !!!
service.file.wantedby=multi-user.target
### end: for CentOS7 / Ubuntu 16 or higher#

###########################################
#####
#####  일반적인 Application 인 경우
#####
##### 제어 shell script
##### (start,sh, stop.sh, status.sh, etc ...)
###########################################
# Property: execution.filename
# 실행 파일명
# !!! 프로그램에 따라 수정할 것. !!!
execution.filename=${build.name}.jar

# Property: application.name
# 실행이름
# since: 2019/10/16
# !!! 프로그램에 따라 수정할 것. !!!
application.name=STRM


# 파일 변경
server.port=18080
server.servlet.contextpath=strm
